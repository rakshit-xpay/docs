{
  "openapi": "3.0.1",
  "info": {
    "title": "xPay API Store",
    "description": "",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.xpaycheckout.com"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/payments/create-intent": {
      "post": {
        "description": "This API is the first API to be called when the payment flow begins. Through this API, you inform xPay of the intent of the user to pay with all the requisite info about the user.",
        "requestBody": {
          "description": "Create Intent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-intent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create Intent response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/get-intent/{xIntentId}": {
      "get": {
        "description": "You can use this API to get the status of the transaction that corresponds to a particular intent. This API also returns the masked card info of the payer (if it's a card transaction) and the transaction lifecycle, which includes multiple attempts, failures, and other checkpoints during a transaction.",
        "parameters": [
          {
            "name": "xIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66f53a6e2097773e4f0112c8"
            },
            "description": "Unique identifier of the intent"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with transaction status and related details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, xIntentId not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/merchant/refund": {
      "post": {
        "description": "The Refund APIs allow merchants to process refunds for previously captured payments",
        "requestBody": {
          "description": "Refund API",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refund"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refund API response"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/link/merchant/generate-link": {
      "post": {
        "description": "This API can be used to generate payment links programmatically. Payments links are basically standalone webpages where your customer can make a one time payment. These do not need any integrations.",
        "requestBody": {
          "description": "Generate Payment Link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generate-link"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Generate Payment Link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generate-link-response"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/create-intent-with-tax": {
      "post": {
        "description": "This API creates a payment intent with tax calculations based on the user's location and other relevant factors. It returns an xIntentId along with the calculated tax, enabling compliant payment processing with accurate tax details.",
        "requestBody": {
          "description": "Create Intent with tax",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-intent-with-tax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create intent with tax response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/get-intent-with-tax/{xIntentId}": {
      "get": {
        "description": "This API retrieves the status and details of a payment intent, including tax calculations. Use this to check the payment's lifecycle, tax breakdown, and any associated metadata.",
        "parameters": [
          {
            "name": "xIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66f53a6e2097773e4f0112c8"
            },
            "description": "Unique identifier of the intent"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with transaction status and related details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, xIntentId not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/create": {
      "post": {
        "description": "",
        "requestBody": {
          "description": "Create Subscription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create Subscription response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create-subscription-response"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/get-subscription/{subscriptionId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66f53a6e2097773e4f0112c8"
            },
            "description": "Unique identifier of the subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with subscription details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-subscription-response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, xSubscriptionId not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/merchant/cancel": {
      "post": {
        "description": "",
        "requestBody": {
          "description": "Cancel Subscription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancel-subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cancel Subscription response"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }, 
    "/subscription/link/merchant/generate-link": {
        "post": {
        "requestBody": {
          "description": "Generate Subscription Link",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription-link"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Generate Subscription Link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription-link-response"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/cancel/{xIntentId}": {
      "post": {
        "description": "",
        "requestBody": {
          "description": "Cancel Payment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancel-payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cancel Payment response"
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    } 
  },
  "components": {
    "schemas": {
      "create-intent": {
        "required": ["amount", "currency", "callbackUrl", "customerDetails"],
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount in lowest count unit. e.g.: For USD 1, amount is 100 representing 100 cents",
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "currency": {
            "description": "Three letter abbreviation of the currency",
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "receiptId": {
            "description": "Your identifier of the order",
            "type": "string",
            "example": "order123"
          },
          "customerDetails": {
            "description": "Details about the customer",
            "type": "object",
            "properties": {
              "name": {
                "description": "Customer's name",
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "description": "Customer's email address",
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "description": "Customer's contact number including country code",
                "type": "integer",
                "format": "int64",
                "example": 9123456789
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            },
            "required": ["name", "email"]
          },
          "description": {
            "description": "The description of the order, if any",
            "type": "string",
            "example": "Order for 2 items"
          },
          "callbackUrl": {
            "description": "The URL we will callback to with the order status once it finishes.",
            "type": "string",
            "example": "https://example.com/callback"
          }
        }
      },
      "generate-link": {
        "required": ["amount", "currency", "customerDetails", "dueDate"],
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount in lowest count unit. e.g.: For USD 1, amount is 100 representing 100 cents",
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "currency": {
            "description": "Three letter abbreviation of the currency",
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "receiptId": {
            "description": "Your identifier of the order",
            "type": "string",
            "example": "order123"
          },
          "customerDetails": {
            "description": "Details about the customer",
            "type": "object",
            "properties": {
              "name": {
                "description": "Customer's name",
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "description": "Customer's email address",
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "description": "Customer's contact number including country code",
                "type": "integer",
                "format": "int64",
                "example": 9123456789
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            },
            "required": ["name", "email"]
          },
          "description": {
            "description": "The description of the order, if any",
            "type": "string",
            "example": "Order for 2 items"
          },
          "dueDate": {
            "description": "Timestamp in epoch milliseconds, indicating the expiration time of the link",
            "type": "integer",
            "format": "int64",
            "example": 32526868154000
          }
        }
      },
      "refund": {
        "required": ["xIntentId"],
        "type": "object",
        "properties": {
          "xIntentId": {
            "description": "Unique identifier of the intent",
            "type": "string",
            "example": "66f53a6e2097773e4f0112r3"
          }
        }
      },
      "create-intent-with-tax": {
        "required": [
          "amount",
          "currency",
          "customerDetails",
          "callbackUrl",
          "naicsCode"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount in lowest count unit. e.g.: For USD 1, amount is 100 representing 100 cents",
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "currency": {
            "description": "Three letter abbreviation of the currency",
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "receiptId": {
            "description": "Your identifier of the order",
            "type": "string",
            "example": "order123"
          },
          "customerDetails": {
            "description": "Details about the customer",
            "type": "object",
            "properties": {
              "name": {
                "description": "Customer's name",
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "description": "Customer's email address",
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "description": "Customer's contact number including country code",
                "type": "integer",
                "format": "int64",
                "example": 9123456789
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            },
            "required": ["name", "email"]
          },
          "description": {
            "description": "The description of the order, if any",
            "type": "string",
            "example": "Order for 2 items"
          },
          "callbackUrl": {
            "description": "The URL we will callback to with the order status once it finishes.",
            "type": "string",
            "example": "https://example.com/callback"
          },
          "naicsCode": {
            "description": "This is the NAICS code of the product you are selling using xPay. You can refer to the complete list of NAICS codes [here](https://www.naics.com/search-naics-codes-by-industry/).",
            "type": "integer",
            "format": "int64",
            "example": 52
          }
        }
      },
      "IntentDetailsResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount in lowest count unit (e.g., cents for USD)",
            "example": 100
          },
          "currency": {
            "type": "string",
            "description": "Three-letter currency code",
            "example": "USD"
          },
          "receiptId": {
            "type": "string",
            "description": "Your identifier for the order",
            "example": "order123"
          },
          "mode": {
            "type": "string",
            "description": "The mode in which the transaction was made (e.g., TEST or LIVE)",
            "example": "TEST"
          },
          "customerDetails": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the customer",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "description": "Email address of the customer",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "type": "string",
                "description": "Customer's contact number with country code",
                "example": "9123456789"
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the order, if any",
            "example": "Order for 2 items"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Callback URL to notify order status",
            "example": "https://example.com/callback"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the intent was created",
            "example": "2024-09-26T10:41:50.472+00:00"
          },
          "status": {
            "type": "string",
            "description": "Current status of the intent",
            "enum": [
              "CREATED",
              "INCOMPLETE",
              "SUCCESS",
              "FAILED",
              "REFUNDED",
              "DISPUTED",
              "DISPUTE_WON"
            ],
            "example": "CREATED"
          },
          "fwdUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to the xPay payment gateway for payment.",
            "example": "https://pay.xpaycheckout.com/?xpay_intent_id=67f53a6e2097773e4f0112c8"
          },
          "xIntentId": {
            "type": "string",
            "description": "Unique identifier of the intent",
            "example": "66f53a6e2097773e4f0112c8"
          }
        }
      },
      "generate-link-response": {
        "type": "object",
        "properties": {
          "shortUrl": {
            "type": "string",
            "description": "The shortened URL generated by the xPay API. This link can be shared with customers for completing payments.",
            "example": "https://api.xpaycheckout.com/link/pcTrro7D"
          }
        }
      },
      "Error": {
        "required": ["errorCode", "errorDescription"],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "example": "bad_request"
          },
          "errorDescription": {
            "type": "string",
            "example": "Failed to read request"
          }
        }
      },
      "create-subscription": {
        "required": [
          "amount",
          "currency",
          "customerDetails",
          "callbackUrl",
          "interval",
          "intervalCount",
          "cycleCount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount in lowest count unit. e.g.: For USD 1, amount is 100 representing 100 cents",
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "currency": {
            "description": "Three letter abbreviation of the currency",
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "receiptId": {
            "description": "Your identifier of the order",
            "type": "string",
            "example": "order123"
          },
          "customerDetails": {
            "description": "Details about the customer",
            "type": "object",
            "properties": {
              "name": {
                "description": "Customer's name",
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "description": "Customer's email address",
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "description": "Customer's contact number including country code",
                "type": "string",
                "example": "9123456789"
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            },
            "required": ["name", "email"]
          },
          "description": {
            "type": "string",
            "description": "Description of the order, if any",
            "example": "Order for 2 items"
          },
          "callbackUrl": {
            "description": "The URL we will callback to with the order status once it finishes.",
            "type": "string",
            "example": "https://example.com/callback"
          },
          "interval": {
            "type": "string",
            "description": "The interval group between subscriptions.",
            "enum": ["DAY", "WEEK", "MONTH", "YEAR"],
            "example": "MONTH"
          },
          "intervalCount": {
            "type": "integer",
            "description": "The number of intervals between subscription billings. For example, `interval = MONTH` and `intervalCount = 3` bills every 3 months.",
            "format": "int64",
            "example": 2
          },
          "cycleCount": {
            "type": "integer",
            "description": "The number of billing cycles for which the subscription will renew before ending.",
            "format": "int64",
            "example": 2
          }
        }
      },
      "create-subscription-response": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Unique identifier of the subscription",
            "example": "66f53a6e2097773e4f0112c8"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the subscription was created",
            "example": "2024-09-26T10:41:50.472+00:00"
          },
          "fwdUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to the xPay payment gateway for payment.",
            "example": "https://pay.xpaycheckout.com/?subscription_id=67f53a6e2097773e4f0112c8"
          }
        }
      },
      "get-subscription-response": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Unique identifier of the subscription",
            "example": "66f53a6e2097773e4f0112c8"
          },
          "interval": {
            "type": "string",
            "enum": ["DAY", "WEEK", "MONTH", "YEAR"],
            "example": "MONTH"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "cycleCount": {
            "type": "integer",
            "description": "The number of billing cycles for which the subscription will renew before ending.",
            "format": "int64",
            "example": 2
          },
          "remainingCycleCount": {
          "type": "integer",
          "description": "The number of billing cycles remaining for the subscription.",
          "format": "int64",
          "example": 2
          }, 
          "currency": {
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "presentmentCurrency": {
            "type": "string",
            "description": "The currency that the customer paid in",
            "example": "USD"
          },
          "mode": {
            "type": "string",
            "description": "The mode in which the transaction was made (e.g., TEST or LIVE)",
            "enum": ["TEST", "LIVE"],
            "example": "TEST"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the subscription was created",
            "example": "2024-09-26T10:41:50.472+00:00"
          },
          "status": {
            "type": "string",
            "description": "The status of the subscription",
            "enum": ["ACTIVE", "INACTIVE", "INCOMPLETE", "CREATED", "CANCELED"],
            "example": "CREATED"
          },
          "description": {
            "type": "string",
            "description": "Description of the order, if any",
            "example": "Order for 2 items"
          }
        }
      },
      "cancel-subscription": {
        "required": ["subscriptionId"],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "description": "Unique identifier of the subscription",
            "type": "string",
            "example": "66f53a6e2097773e4f0112c8"
          }
        }
      },
      "cancel-payment": {
        "required": ["xIntentId"],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "description": "Unique identifier of the payment",
            "type": "string",
            "example": "66f53a6e2097773e4f0112c8"
          }
        }
      }, 
      "subscription-link": {
        "required": ["amount", "currency", "customerDetails", "expiryDate", "interval", "intervalCount", "cycleCount"],
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount in lowest count unit. e.g.: For USD 1, amount is 100 representing 100 cents",
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "currency": {
            "description": "Three letter abbreviation of the currency",
            "type": "string",
            "enum": ["USD"],
            "example": "USD"
          },
          "receiptId": {
            "description": "Your identifier of the order",
            "type": "string",
            "example": "order123"
          },
          "customerDetails": {
            "description": "Details about the customer",
            "type": "object",
            "properties": {
              "name": {
                "description": "Customer's name",
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "description": "Customer's email address",
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contactNumber": {
                "description": "Customer's contact number including country code",
                "type": "integer",
                "format": "int64",
                "example": 9123456789
              },
              "customerAddress": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string",
                    "description": "Address Line 1 of the customer",
                    "example": "123 Main St"
                  },
                  "addressLine2": {
                    "type": "string",
                    "description": "Address Line 2 of the customer",
                    "example": "Apt 101"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the customer",
                    "example": "Los Angeles"
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the customer",
                    "example": "California"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the customer",
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Pincode of the customer",
                    "example": "123456"
                  }
                }
              }
            },
            "required": ["name", "email"]
          },
          "description": {
            "description": "The description of the order, if any",
            "type": "string",
            "example": "Order for 2 items"
          },
          "expiryDate": {
            "description": "Timestamp in epoch milliseconds, indicating the expiration time of the link",
            "type": "integer",
            "format": "int64",
            "example": 32526868154000
          },
          "interval": {
            "type": "string",
            "description": "The interval group between subscriptions.",
            "enum": ["DAY", "WEEK", "MONTH", "YEAR"],
            "example": "MONTH"
          },
          "intervalCount": {
            "type": "integer",
            "description": "The number of intervals between subscription billings. For example, `interval = MONTH` and `intervalCount = 3` bills every 3 months.",
            "format": "int64",
            "example": 2
          }, 
          "cycleCount": {
            "type": "integer",
            "description": "The number of billing cycles for which the subscription will renew before ending.",
            "format": "int64",
            "example": 2
          }
        }
      },
      "subscription-link-response": {
        "type": "object",
        "properties": {
          "shortUrl": {
            "type": "string",
            "description": "The shortened URL generated by the xPay API. This link can be shared with customers for completing payments.",
            "example": "https://api.xpaycheckout.com/subscription/link/pcTrro7D"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
